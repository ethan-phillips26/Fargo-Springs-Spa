@page "/bookings/create"
@using Microsoft.EntityFrameworkCore
@using FargoSpringsSpa.Models
@inject IDbContextFactory<FargoSpringsSpa.Data.FargoSpringsSpaContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Booking</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Booking" OnValidSubmit="AddBooking" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="userid" class="form-label">UserId:</label> 
                <InputNumber id="userid" @bind-Value="Booking.UserId" class="form-control" /> 
                <ValidationMessage For="() => Booking.UserId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="serviceid" class="form-label">ServiceId:</label> 
                <InputNumber id="serviceid" @bind-Value="Booking.ServiceId" class="form-control" /> 
                <ValidationMessage For="() => Booking.ServiceId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="appointmentdate" class="form-label">AppointmentDate:</label> 
                <InputDate id="appointmentdate" @bind-Value="Booking.AppointmentDate" class="form-control" /> 
                <ValidationMessage For="() => Booking.AppointmentDate" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="status" class="form-label">Status:</label> 
                <InputText id="status" @bind-Value="Booking.Status" class="form-control" /> 
                <ValidationMessage For="() => Booking.Status" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="notes" class="form-label">Notes:</label> 
                <InputText id="notes" @bind-Value="Booking.Notes" class="form-control" /> 
                <ValidationMessage For="() => Booking.Notes" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/bookings">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Booking Booking { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddBooking()
    {
        using var context = DbFactory.CreateDbContext();
        context.Booking.Add(Booking);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/bookings");
    }
}
